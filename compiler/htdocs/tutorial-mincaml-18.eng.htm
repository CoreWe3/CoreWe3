<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=ascii">
<link rel=Edit-Time-Data href="./tutorial-mincaml.files/editdata.mso">
<link rel="stylesheet" href="sh.css" type="text/css">
<title>A Crash Course for the MinCaml Compiler</title>
</head>
<body bgcolor="#FFFFFF" link=blue vlink=purple class="Normal">
<div>
  <h3>13-Bit Immediate Optimization (<tt>simm13.ml</tt>)</h3>
  <p>In SPARC assembly, most integer operations can take an integer within 13 bits (no less than -4096 and less than 4096) as the second operand. An optimization using this feature is implemented in <a target="srcview"
href="min-caml.html#simm13_g">Simm13.g</a> and <a target="srcview"
href="min-caml.html#simm13_gprime">Simm13.g'</a>. They are similar to constant folding and elimination of unnecessary definitions, except that the target language is virtual SPARC assembly and the constants are limited to 13-bit integers.</p>
  <p><a
href="tutorial-mincaml-19.eng.htm">Next</a></p>
</div>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-1484933-2";
urchinTracker();
</script>
</body>
</html>
